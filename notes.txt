Die Idee ist mit Dilation neue Charakteristiken in den Zeitreihen zu finden.
-> Ziel ist also zum Beispiel ein neues Motif zu finden mit Dilation (die Schwierigkeit wird dann zu begründen, was dieses motif nun ist und mit domainwissen den Fund zu begründen)
-> dafür wird z.B. dilations size = 2 gesetzt und dann alle use cases getestet


1. TS -dilationMaping-> dilated TS
2. dilated TS, m -stumpy-> MP 
3. MP, NNIndex -dilationMapping-> fixedMP
4. Test Use Cases


Beispiel Output Stumpy MP:
[[2.0911796863140517 3 -1 3]
 [1.6790458917529159 8 -1 8]
 [2.7568667215042795 7 -1 7]
 [1.2368147080556748 8 0 8]
 [2.1709893306101686 1 1 8]
 [3.1265625563641146 2 2 8]
 [3.5980219031954253 1 1 -1]
 [2.7568667215042795 2 2 -1]
 [1.2368147080556748 3 3 -1]]



+++FIX INDEX+++
Index: 	0 1 2 3 4 5 6 7
TS:		2 3 4 5 6 7 8 9

Orig Index:	0 2 4 6 1 3 5 7
New Index:	0 1 2 3 4 5 6 7
Dil TS:	2 4 6 8 3 5 7 9

Restore old Index:
New Index:	0 1 2 3 4 5 6 7  -dilationMapping-> 0 2 4 6 1 3 5 7




Fragen:
- Index “left” Nearest Neighbor, Index “right” Nearest Neighbor sind dann irrelevant? Diese sind dann ja nicht mehr korrekt